BezierCurve.py:
A program that creates a BezierCurve class that stores the control points read from the input file along with other optional arguments, then calculates the Bezier Curve and outputs the result in Open Inventor format to stdout.
The BezierCurve class has two functions, the constructor function which stores important information necessary to calculate the Bezier curve, as well as the calculate_curve() function to do the calculation given above. There are few helper functions in the program, such as nCr(n, r), which calculates "the number of ways to choose a sample of r elements from a set of n distinct objects where order does not matter and replacements are not allowed".
The frange(a, b, c) function yields all possible number between a and b inclusively given the timestep c.
The main function of the program is also inside BezierCurve.py. Its role is pretty simple: it reads the user input and accepts arguments and then construct the BezierCurve class, before calling the calculate_curve function to actually calculate the curve. After that, it prints out the output so that it is in Open Inventor format.

The program is written using Python 3. It was written in MacOS but it is able to run across all platform that has Python 3 installed. A script file named CG_hw1 has been written in order to run the python file and accepts all the arguments before printing Inventor to standard out. Please note that, in case the script is not executable due to permission deny, please run the command "chmod +x CG_hw1" inside the terminal. Also note that all the files needed to run the program have to be in the same folder. 
